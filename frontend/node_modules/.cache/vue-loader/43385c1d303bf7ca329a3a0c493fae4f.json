{"remainingRequest":"/Users/luis/Documents/Code/coffee-app/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luis/Documents/Code/coffee-app/frontend/src/components/MapInfoWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luis/Documents/Code/coffee-app/frontend/src/components/MapInfoWindow.vue","mtime":1586023526692},{"path":"/Users/luis/Documents/Code/coffee-app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luis/Documents/Code/coffee-app/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luis/Documents/Code/coffee-app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luis/Documents/Code/coffee-app/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWFwSW5mb1dpbmRvdyIsCiAgcHJvcHM6IHsKICAgIGxhdDogeyB0eXBlOiBOdW1iZXIsIHJlcXVpcmVkOiB0cnVlIH0sCiAgICBsbmc6IHsgdHlwZTogTnVtYmVyLCByZXF1aXJlZDogdHJ1ZSB9CiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgaW5mb1c6IG51bGwKICB9KSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kcGFyZW50LmdldE1hcChtYXAgPT4gewogICAgICAodGhpcy5pbmZvVyA9IG5ldyB3aW5kb3cuZ29vZ2xlLm1hcHMuSW5mb1dpbmRvdyh7CiAgICAgICAgcG9zaXRpb246IHsgbGF0OiB0aGlzLmxhdCwgbG5nOiB0aGlzLmxuZyB9LAogICAgICAgIGNvbnRlbnQ6IHRoaXMuJGVsLAogICAgICAgIGRpc2FibGVBdXRvUGFuOiB0cnVlCiAgICAgIH0pKSwKICAgICAgICB0aGlzLmluZm9XLm9wZW4obWFwKTsKICAgIH0pOwogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMuaW5mb1cuY2xvc2UoKTsKICB9Cn07Cg=="},{"version":3,"sources":["MapInfoWindow.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MapInfoWindow.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MapInfoWindow\",\n  props: {\n    lat: { type: Number, required: true },\n    lng: { type: Number, required: true }\n  },\n  data: () => ({\n    infoW: null\n  }),\n  mounted() {\n    this.$parent.getMap(map => {\n      (this.infoW = new window.google.maps.InfoWindow({\n        position: { lat: this.lat, lng: this.lng },\n        content: this.$el,\n        disableAutoPan: true\n      })),\n        this.infoW.open(map);\n    });\n  },\n  beforeDestroy() {\n    this.infoW.close();\n  }\n};\n</script>"]}]}